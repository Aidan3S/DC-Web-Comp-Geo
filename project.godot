; Engine configuration file.
; It's best edited using the editor UI and not directly,
; since the parameters that go here are not all obvious.
;
; Format:
;   [section] ; section goes between []
;   param=value ; assign values to parameters

config_version=4

_global_script_classes=[ {
"base": "OctreeNode",
"class": "BranchNode",
"language": "GDScript",
"path": "res://src/World/Modal/BranchNode.gd"
}, {
"base": "MeshInstance",
"class": "Chunk",
"language": "GDScript",
"path": "res://src/World/Chunk.gd"
}, {
"base": "OctreeNode",
"class": "HeteroLeafNode",
"language": "GDScript",
"path": "res://src/World/Modal/HeteroLeafNode.gd"
}, {
"base": "OctreeNode",
"class": "HomoLeafNode",
"language": "GDScript",
"path": "res://src/World/Modal/HomoLeafNode.gd"
}, {
"base": "Reference",
"class": "LinAlg",
"language": "GDScript",
"path": "res://ext/LinAlg.gd"
}, {
"base": "Reference",
"class": "Matrix",
"language": "GDScript",
"path": "res://src/World/Modal/Matrix.gd"
}, {
"base": "Reference",
"class": "MeshTool",
"language": "GDScript",
"path": "res://src/World/MeshTool.gd"
}, {
"base": "Reference",
"class": "Octree",
"language": "GDScript",
"path": "res://src/World/Modal/Octree.gd"
}, {
"base": "Resource",
"class": "OctreeNode",
"language": "GDScript",
"path": "res://src/World/Modal/OctreeNode.gd"
}, {
"base": "Reference",
"class": "WorldGenerator",
"language": "GDScript",
"path": "res://src/World/Generator/WorldGenerator.gd"
} ]
_global_script_class_icons={
"BranchNode": "",
"Chunk": "",
"HeteroLeafNode": "",
"HomoLeafNode": "",
"LinAlg": "",
"Matrix": "",
"MeshTool": "",
"Octree": "",
"OctreeNode": "",
"WorldGenerator": ""
}

[application]

config/name="Dual Contouring Building Game"
run/main_scene="res://Spatial.tscn"
config/icon="res://icon.png"

[autoload]

QEFSolver="*res://src/World/Modal/QEFSolver.cs"

[debug]

gdscript/warnings/return_value_discarded=false
gdscript/warnings/integer_division=false

[input]

move_forward={
"deadzone": 0.5,
"events": [ Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":false,"control":false,"meta":false,"command":false,"pressed":false,"scancode":87,"unicode":0,"echo":false,"script":null)
 ]
}
move_backward={
"deadzone": 0.5,
"events": [ Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":false,"control":false,"meta":false,"command":false,"pressed":false,"scancode":83,"unicode":0,"echo":false,"script":null)
 ]
}
move_left={
"deadzone": 0.5,
"events": [ Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":false,"control":false,"meta":false,"command":false,"pressed":false,"scancode":65,"unicode":0,"echo":false,"script":null)
 ]
}
move_right={
"deadzone": 0.5,
"events": [ Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":false,"control":false,"meta":false,"command":false,"pressed":false,"scancode":68,"unicode":0,"echo":false,"script":null)
 ]
}
move_up={
"deadzone": 0.5,
"events": [ Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":false,"control":false,"meta":false,"command":false,"pressed":false,"scancode":69,"unicode":0,"echo":false,"script":null)
 ]
}
move_down={
"deadzone": 0.5,
"events": [ Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":false,"control":false,"meta":false,"command":false,"pressed":false,"scancode":81,"unicode":0,"echo":false,"script":null)
 ]
}
sprint={
"deadzone": 0.5,
"events": [ Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":false,"control":false,"meta":false,"command":false,"pressed":false,"scancode":16777237,"unicode":0,"echo":false,"script":null)
 ]
}
crouch={
"deadzone": 0.5,
"events": [ Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":false,"control":false,"meta":false,"command":false,"pressed":false,"scancode":16777238,"unicode":0,"echo":false,"script":null)
 ]
}

[physics]

common/enable_pause_aware_picking=true

[rendering]

environment/default_environment="res://default_env.tres"
